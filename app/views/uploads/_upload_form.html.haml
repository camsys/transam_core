= dialog_tag('Spreadsheet', {:icon => 'fa fa-upload', :class => "header-part"}) do
  = simple_form_for(@upload,
    :html => {:multipart => true, :class => 'form-vertical' }, :wrapper => :vertical_form,
    :wrapper_mappings => {:check_boxes => :vertical_radio_and_checkboxes, :radio_buttons => :vertical_radio_and_checkboxes,
    :file => :vertical_file_input, :boolean => :vertical_boolean}) do |f|

    .row
      .col-sm-6
        = f.association :file_content_type, :collection => FileContentType.active.select{|f| can? :read, f}, :required => true, :label => 'Spreadsheet Content', :prompt => 'Set the spreadsheet contents...'
        - custom_field = SystemConfigFieldCustomization.find_by(table_name: 'uploads', field_name: 'organization_id', is_visible: 'false')
        - if custom_field
          = f.input :organization_id, :as => :hidden, :input_html => { :value => @organization_list.first }
    - unless custom_field
      .col-sm-6
        - if @organization_list.count == 1
          = f.input :organization_id, :as => :hidden, :input_html => { :value => @organization_list.first }
        - else
          = f.input :organization_id, :required => true, :collection => Organization.where(id: Policy.where('parent_id IS NOT NULL AND organization_id IN (?)', @organization_list).pluck(:organization_id)), :label_method => 'coded_name'
    .row
      .col-sm-6
        = f.input :file, :required => true, :label => 'Spreadsheet', :hint => "Ensure that the spreadsheet uploaded is in the correct format."
      - if (current_user.has_role? :admin) && SystemConfigFieldCustomization.find_by(table_name: 'uploads', field_name: 'force_update', is_visible: 'false').nil?
        .col-sm-6.force_update{style: 'display: none;'}
          = f.input :force_update, :collection => [['No', false],['Yes', true]], :include_blank => false
    .row
      .col-sm-6
        = f.button :submit, 'Upload spreadsheet', :class=>"btn btn-primary"

:javascript
  var max_file_size_mb = #{Rails.application.config.max_upload_file_size};

  $(document).ready(function() {

    transam.make_same_height('.header-part');

    // Insert a change listener to validate the file size before uploading.
    $('#upload_file').change(function() {
      transam.validate_file_size(this, max_file_size_mb);
    });
  });

  // jquery validations
  $('#new_upload').validate({
    ignore: [], //validate hidden fields
    submitHandler: function(form) {
      form.submit();
    }
  });

- if @organization_list.count > 1
  :javascript
    //Hide force_update unless the user is uploading new inventory and then display so the user can choose if they want to force the update
    var new_inventory_file_content_type_id = #{FileContentType.find_by(name: 'New Inventory').id};

    $(function(){
      $('#upload_file_content_type_id').change(function() {

        if($(this).val() == new_inventory_file_content_type_id) {
          $(".force_update").show();
          $('label[for="upload_organization_id"] abbr').hide();
          $('#upload_organization_id').removeClass('required');
          $('#upload_organization_id').prop('required',false);
          $('#upload_organization_id option').first().text("#{@organization_list.count == 1 ? '' : 'Multi Org'}");
          $('#upload_organization_id').val('');
        } else {
          $(".force_update").hide();
          $('label[for="upload_organization_id"] abbr').show();
          $('#upload_organization_id').addClass('required');
          $('#upload_organization_id option').first().text('');
        }
      });
    });
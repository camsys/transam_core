:ruby
  # Get the task status types to search for
  pending_status = TaskStatusType.find_by_name('Not Started')
  in_progress_status = TaskStatusType.find_by_name('In Progress')
  on_hold_status = TaskStatusType.find_by_name('Halted Pending Input')
  tasks = Task.where("assigned_to_user_id = ? AND task_status_type_id IN(?)", current_user.id, [pending_status, in_progress_status, on_hold_status]).order(:complete_by)
  pending = tasks.where(:task_status_type => pending_status)
  in_progress = tasks.where(:task_status_type => in_progress_status)
  on_hold = tasks.where(:task_status_type => on_hold_status)

  pending_pcnt = pending.count > 0 ? pending.count / tasks.count.to_f * 100.0 : 0
  in_progress_pcnt = in_progress.count > 0 ? in_progress.count / tasks.count.to_f * 100.0 : 0
  on_hold_pcnt = on_hold.count > 0 ? on_hold.count / tasks.count.to_f * 100.0 : 0

.col-md-2.col-sm-2
  .panel.panel-default{:style => "height: 200px;overflow-y: auto;"}
    .panel-heading
      .pull-right
        %span.badge= tasks.count
      Tasks
    .panel-body
      - if tasks.empty?
        %p= "No tasks due"
      - else
        = render :partial => 'task_summary_detail', :locals => {:label => 'Pending', :count => pending.count, :pcnt => pending_pcnt, :display_class => 'info'}
        = render :partial => 'task_summary_detail', :locals => {:label => 'Started', :count => in_progress.count, :pcnt => in_progress_pcnt, :display_class => 'warning'}
        = render :partial => 'task_summary_detail', :locals => {:label => 'On Hold', :count => on_hold.count, :pcnt => on_hold_pcnt, :display_class => 'danger'}

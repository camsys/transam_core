:ruby
  asset_types = AssetType.pluck(:id, :name, :display_icon_name)

%li{:class => "dropdown #{get_nav_link_class('assets')}"}
  = link_to "#", :class => "dropdown-toggle", :data => {"toggle" => "dropdown"}, :title => 'Inventory' do
    %i.fa.fa-bus.fa-2x
    %b.caret
  %ul.dropdown-menu.multi-level{:role => "menu"}
    - asset_types.each do |type|
      - subtypes = Asset.operational.where('organization_id IN (?) AND asset_subtypes.asset_type_id = ?', @organization_list, type[0]).joins(:asset_subtype).group(['asset_subtypes.name', 'asset_subtypes.id']).order(:asset_subtype_id).count
      - if subtypes.count > 0
        %li.text-left.dropdown-submenu
          = link_to inventory_index_path(:asset_type => type[0], :asset_subtype => 0, :asset_group => 0)  do
            %i{:class => "#{type[2]} fa-fw"}
            = type[1].pluralize(2)
          %ul.dropdown-menu
            - subtypes.keys.each do |subtype|
              %li.text-left
                = link_to subtype[0], inventory_index_path(:asset_subtype => subtype[1], :asset_group => 0)
    %li.divider
    %li.text-left.dropdown-submenu
      = link_to manufacturers_path do
        %i.fa.fa-fw.fa-star
        Manufacturers
      %ul.dropdown-menu
        - asset_types.each do |type|
          - manufacturers = Manufacturer.joins(:assets).where(assets: {asset_type_id: type[0], organization_id: @organization_list}).distinct.pluck("manufacturers.id", "manufacturers.name")
          - if manufacturers.any?
            %li.text-left.dropdown-submenu
              = link_to '#' do
                %i{:class => "#{type[2]} fa-fw"}
                = type[1].pluralize(2)
              %ul.dropdown-menu{style: "overflow-y:scroll; max-height:400px;"}
                - manufacturers.each do | manufacturer |
                  %li.text-left
                    = link_to inventory_index_path(:manufacturer_id => manufacturer[0]) do
                      %i.fa.fa-star.fa-fw
                      = manufacturer[1]
        %li.divider
        %li.text-left
          = link_to manufacturers_path do
            %i.fa.fa-star.fa-fw
            All Manufacturers
    %li.divider
    %li.text-left.dropdown-submenu
      = link_to asset_groups_path do
        %i.fa.fa-tags.fa-fw
        Groups
      %ul.dropdown-menu
        - AssetGroup.where(organization_id: @organization_list).each do |grp|
          %li.text-left
            = link_to asset_group_path(grp) do
              %i.fa.fa-tag.fa-fw
              = grp.name
        %li.divider
        %li.text-left
          = link_to asset_groups_path do
            %i.fa.fa-tags.fa-fw
            Manage Groups
      - event_type = EarlyDispositionRequestUpdateEvent.asset_event_type
      - can_view_early_disposition = (event_type.active and can?(:manage, EarlyDispositionRequestUpdateEvent))
      - if can_view_early_disposition || can?(:accept_transfers, Asset)
        - early_events = Asset.where(organization_id: @organization_list).joins(:early_disposition_requests).where(asset_events: {state: 'new'}).count
        - transferred_assets = Asset.where(organization_id: @organization_list).where('asset_tag = object_key').count
        - if (early_events > 0 && can_view_early_disposition) || (transferred_assets > 0 && can?(:accept_transfers, Asset))
          %li.divider
          %li.text-left.dropdown-submenu
            = link_to '#' do
              %i.fa.fa-exclamation.fa-fw
              Action Events
            %ul.dropdown-menu
              - if early_events > 0 && can_view_early_disposition
                %li.text-left{:style => 'width:255px'}
                  = link_to inventory_index_path(:early_disposition => 1) do
                    %i.fa.fa-fw{:class => event_type.display_icon_name}
                    %span.badge.pull-right= early_events
                    Early Disposition Proposed
              - if transferred_assets > 0 && can?(:accept_transfers, Asset)
                %li.text-left{:style => 'width:255px'}
                  = link_to inventory_index_path(:transferred_assets => 1) do
                    %i.fa.fa-refresh.fa-fw
                    %span.badge.pull-right= transferred_assets
                    Newly Transferred Assets
    %li.divider
    %li.text-left
      = link_to reset_searches_path(:search_type => SearchType.find_by(class_name: 'AssetSearcher').id) do
        %i.fa.fa-search.fa-fw
        Query
    - SystemConfig.transam_module_names.each do |mod|
      = render :partial => "shared/#{mod}_inventory_sub_nav" rescue nil
    - if !Policy.where('parent_id IS NOT NULL AND organization_id IN (?)', @organization_list).pluck(:organization_id).empty? && (can? :create, Asset)
      %li.divider
      %li.text-left
        = link_to new_asset_inventory_index_path do
          %i.fa.fa-plus.fa-fw
          Add Asset
      %li.divider
      %li.text-left.dropdown-submenu
        = link_to uploads_path do
          %i.fa.fa-file-excel-o.fa-fw
          Bulk Updates
        %ul.dropdown-menu
          %li.text-left
            = link_to templates_uploads_path do
              %i.fa.fa-download.fa-fw
              Download Template
          %li.text-left
            = link_to new_upload_path do
              %i.fa.fa-upload.fa-fw
              Upload Template
:ruby
  report_conditions = []
  report_values = []

  current_user.roles_name.each do |role|
    report_conditions << "roles LIKE ?"
    report_values << "%#{role}%"
  end

%li{:class => "dropdown #{get_nav_link_class('reports')}"}
  = link_to reports_path, :class => "dropdown-toggle", :data => {"toggle" => "dropdown"}, :title => 'Reports' do
    %i.fa.fa-bar-chart-o.fa-2x
    %b.caret
  %ul.dropdown-menu.multi-level{:role => "menu"}
    - ReportType.active.each do | rt |
      - reports = rt.reports.where(show_in_nav: true, active: true).where(report_conditions.join(' OR '), *report_values)
      - if reports.count > 0
        %li.text-left
          = link_to reports_path(:report_type => rt.id)  do
            %i{:class => "#{rt.display_icon_name} fa-fw"}
            = rt.name.pluralize(2)
          -# %ul.dropdown-menu
          -#   - reports.each do |report|
          -#     %li.text-left
          -#       = link_to report_path(report)  do
          -#         %i{:class => "#{report.report_type.display_icon_name} fa-fw"}
          -#         = report.name

    // All transit users can use this report.
    // This report is not DB driven. 
    // Only admins should be able to see it.
    // I'm not sure if there is a more meta/db-driven way to do this, but this works
    -if current_user.has_role? :admin
      %li.text-left
        = link_to asset_update_report_charts_path  do
          %i{:class => "fa fa-area-chart fa-fw"}
          = "Usage Charts"

    - if Form.count > 0
      %li.divider
      - Form.all.each do | frm |
        - # forms can be complicated with many components so check if they have their own menu
        - view_component = "#{frm.controller}_form_menu"
        - if lookup_context.template_exists?(view_component, 'shared', true)
          = render :partial => "shared/#{view_component}"
        - else
          %li.text-left
            = link_to form_path(frm)  do
              %i.fa.fa-file-text-o.fa-fw
              = frm.name
